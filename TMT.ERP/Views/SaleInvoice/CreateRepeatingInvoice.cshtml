@using TMT.ERP.Commons
@model TMT.ERP.DataAccess.Model.SaleInvoice

@{
    ViewBag.Title = "Create";
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#txtDueDateDefault').focus();
        jQuery.validator.messages.required = "";
        $("#frmCreateRepeatingInvoice").validate({
            invalidHandler: function (e, validator) {
                var errors = validator.numberOfInvalids();
                if (errors) {
                    var errorMiss = '@Resources.Resource.Common_ErrorMissed';
                    var field = '@Resources.Resource.Common_field';
                    var error = '@Resources.Resource.Common_error';
                    var highligh_below = '@Resources.Resource.Common_highligh_below';
                    var message = errors == 1
                        ? errorMiss + ' 1 ' + field + '. ' + highligh_below
                        : errorMiss + ' ' + errors + ' ' + field + 's. ' + highligh_below;
                    $("div.error span").html(message);
                    $("div.error").show();
                } else {
                    $("div.error").hide();
                }
            },
        });
        $('#txtInvoiceDate').change(function () {
            debugger;
            var date = $(this).val();
            $.ajax({
                type: 'POST',
                url: '/Purchase/CompareDate/',
                traditional: true,
                data:{"strDate":date},
                success: function (data) {
                    debugger;
                    if (data == "true") {
                        var msg = '@Resources.Resource.Common_InvoiceDateOne';
                        msg += '<br/>';
                        msg += '@Resources.Resource.Common_InvoiceDateTwo';
                        CreatePopupMessage('divMessage', msg, '@Resources.Resource.Common_Message', 160, 450, '#');
                    }
                }
            });
        });

        $('#btnCreate').click(function () {
            debugger;
            var isValid = $("#frmCreateRepeatingInvoice").valid();
            if (!isValid) {
                return false;
            }

            //For note function
            arrNoteID = [];
            $(".noteID").each(function () {
                if ($(this).val() != "")
                    //  value += parseInt($(this).val());
                    arrNoteID.push($(this).val());
            });

            if ($('#txtSupplier').val() == "") {
                alert("Input supplier, please");
                $('#txtSupplier').focus();
                return false;
            }

            var supplierName = $('#txtSupplier').val();
            var createDate = "";
            var dueDate = "";
            var invoiceNo = $('#hdfBillCode').val();
            var reference = $('#txtReference').val();
            //var stockID = 2;
            var currencyID = $('#CurrencyID').val();
            var vatID = $('#chkVAT').val() ? 1 : 0;
            var userID = $('#hdfUserID').val();
            var supplierID = 0;
            var subTotal = $('#txtSubTotal').asNumber();
            var totalTax = $('#txtTax').asNumber();
            var totalMoney = $('#txtInvoiceTotal').asNumber();
            var status = 4;
            var saleType = 0;
            var invoiceDate = $('#txtInvoiceDate').val();
            var statusRepeating = $("input:radio[id='rbGroup']:checked").val();

            var strResultDate = CompareDate(invoiceDate);
            if (statusRepeating == 1) {
                if (strResultDate == "true") {
                    status = 2;
                }
            }
            if (statusRepeating == 0) {
                if (strResultDate == "true") {
                    status = 0;
                }
            }



            var saleInvoiceDetail = BuildJSON();
            $.ajax({
                type: "POST",
                url: "/Services/SaleInvoiceService.asmx/SaveSaleInvoice",
                async: false,
                data: JSON.stringify({
                    saleInvoiceID: null,
                    supplierID: 0,
                    supplierName: supplierName,
                    createDate: createDate,
                    dueDate: dueDate,
                    invoiceNo: invoiceNo,
                    reference: reference,
                    currencyID: currencyID,
                    vatID: vatID,
                    userID: userID,
                    subTotal: subTotal,
                    totalTax: totalTax,
                    totalMoney: totalMoney,
                    status: status,
                    saleType: saleType,
                    saleInvoiceDetail: saleInvoiceDetail
                }),
                contentType: "application/json; charset=utf-8",
                traditional: true,
                dataType: "json",
                success: function (data) {
                    debugger;
                    var retValue = JSON.parse(data.d);

                    if (retValue.indexOf("ERROR") != -1) {
                        location.href = "/SaleInvoice/CreateRepeatingInvoice/";
                    } else {
                        debugger;
                        $("#hidNoteType").val(2);
                        $("#hidNoteFromID").val(retValue);
                        AddNoteByNoteFromID(parseInt($("#hidNoteFromID").val()), parseInt($("#hidNoteType").val()));

                        //Call function AddNote when create repeating ,
                        //Note type : 2 : Repeating Sale
                        if (status == 0) {
                            var msgDraftSuccess = '@Resources.Resource.Common_Msg_CreateSuccess';
                            var urlDraftSuccess = '/SaleInvoice/Draft/';
                            CreatePopupMessage('divMessage', msgDraftSuccess, '@Resources.Resource.Common_Message', 120, 400, urlDraftSuccess);
                        } else if (status == 2) {
                            $.ajax(
                            {
                                type: 'POST',
                                url: '/SaleInvoice/CreateInvoiceStockOut',
                                traditional: true,
                                dataType: "text",
                                data: { "saleInvoiceId": retValue, "userId": userID },
                                success: function (dataStockOut) {
                                    debugger;
                                    var msgSuccessStockOut = '@Resources.Resource.Common_Msg_Approved';
                                    msgSuccessStockOut += "<br/>";
                                    msgSuccessStockOut += '@Resources.Resource.Common_Msg_ShipmentNoFirstSale';
                                    msgSuccessStockOut += dataStockOut;
                                    msgSuccessStockOut += '@Resources.Resource.Common_Msg_ShipmentNoLastSale';
                                        var urlSuccessStockOut = '/SaleInvoice/AwaitingPayment/';
                                        CreatePopupMessage('divMessage', msgSuccessStockOut, '@Resources.Resource.Common_Message', 160, 400, urlSuccessStockOut);
                                }
                            });
                            } else if (status == 4) {
                                CreateRepeating(retValue);
                                var url = "/SaleInvoice/Repeating/";
                                var msg = '@Resources.Resource.Common_Msg_CreateSuccess';
                                CreatePopupMessage('divMessage', msg, '@Resources.Resource.Common_Message', 120, 400, url);
                            }


                }

                }
            }).error(function (data) {
                alert('Error in save invoice\n' + data);
            });
            return false;
        });
    });

$(document).ready(function () {
    $("#txtSupplier").autocomplete({
        source: function (request, response) {
            var term = request.term;
            $.ajax({
                type: "POST",
                url: "/Services/ContactService.asmx/GetCustomerStartWith",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({
                    nameStartsWith: term
                }),

                success: function (data) {
                    var contact = JSON.parse(data.d);
                    if (contact == "") {
                        $("#ContactIDValue").val(0);
                    }
                    var results = $.map(contact, function (item) {
                        return { label: item.Name, value: item.ID };
                    });
                    response(results.slice(0, 10));
                }
            });
        },
        minLength: 1,
        select: function (event, ui) {
            event.preventDefault();
            $("#txtSupplier").val(ui.item.label);
            $("#ContactIDValue").val(ui.item.value);
        },
        change: function (event, ui) {
            event.preventDefault();
            $("#txtSupplier").val(ui.item.label);
            $("#ContactIDValue").val(ui.item.value);
        }
    });
});
$(document).ready(function () {
    $("#addline").click(function () {
        debugger;
        $.ajax(
            {
                type: "POST",
                url: "/SaleInvoice/AddNewLine/",
                success: function (data) {
                    $('#insertRow').append(data);
                }
            });
        return false;
    });
    $(".goodchange").change(function () {
        ChangeGood(this);
    });
    $(".taxrate").change(function () {
        ChangeTax(this);
    });
    $(".account").change(function () {
        ChangeAccount(this);
    });
    $(".qty").change(function () {
        CalAmount(this);
        CalSubTotal();
        CalTotal();
    });
    $(".disc").change(function () {
        CalAmount(this);
        CalSubTotal();
        CalTotal();
    });
    $(".unitprice").change(function () {
        CalAmount(this);
        CalSubTotal();
        CalTotal();
    });
    $("#chkVAT").change(function () {
        CalTotal();
    });

    $('#form_cancel').click(function () {
        window.location.href = "/SaleInvoice/Dashboard/";
    });
});

function RemoveRow(element) {
    var tr = $(element).closest('tr');
    tr.remove();
    CalSubTotal();
    CalTotal();
}

function ChangeAccount(element) {
    var tr = $(element).closest('tr');
    var accountID = $("#ddlAccountID", tr).val();
    if (accountID == 0) {
        alert("Open add new account");
    }
}

function CalAmount(element) {
    var tr = $(element).closest('tr');
    $(".amount", tr).val(function () {
        var qty = 0;
        if ($('.qty', tr).val() != "")
            qty = $('.qty', tr).asNumber();

        var unitprice = 0;
        if ($('.unitprice', tr).val() != "")
            unitprice = $('.unitprice', tr).asNumber();

        var disc = 0;
        if ($('.disc', tr).val() != "")
            disc = $('.disc', tr).asNumber();

        var retValue = qty * unitprice;
        if (disc > 0)
            retValue = retValue - retValue * disc / 100;
        return retValue;
    }).formatCurrency();
}

function CalSubTotal() {
    $(".subtotal").text(function () {
        var value = 0;
        $(".amount").each(function () {
            if ($(this).val() != "")
                value += $(this).asNumber();
        });
        return value;
    }).formatCurrency();
}

function CalTotal() {
    $("#txtInvoiceTotal").text(function () {
        debugger;
        var subtotal = 0;
        if ($('.subtotal').text() != "")
            subtotal = $('.subtotal').asNumber();
        var tax = 0;
        if ($('#txtTax').text() != "")
            tax = $('#txtTax').asNumber();

        if ($('#chkVAT').prop('checked')) //Inclusive
            return subtotal;
        else //Exclusive
            return subtotal + tax;
    }).formatCurrency();
}

function CalTax() {
    $("#txtTax").text(function () {
        var value = 0;
        if ($('#chkVAT').prop('checked')) //Inclusive
        {
            $("#tblSaleDetail tr").each(function () {
                var tr = $(this).closest('tr');
                var taxvalue = $(".taxvalue", tr).asNumber();
                var qty = 0;
                if ($('.qty', tr).val() != "")
                    qty = $('.qty', tr).asNumber();

                var unitprice = 0;
                if ($('.unitprice', tr).val() != "")
                    unitprice = $('.unitprice', tr).asNumber();

                var disc = 0;
                if ($('.disc', tr).val() != "")
                    disc = $('.disc', tr).asNumber();

                if (taxvalue > 0 & qty > 0 & unitprice > 0)
                    value += qty * ((unitprice - (unitprice * disc / 100)) / ((100 + taxvalue) / 100)) * taxvalue / 100;
                //value += taxvalue * amount / 100;
            });

        }//Exclusive
        else {
            debugger;
            $("#tblSaleDetail tr").each(function () {
                var tr = $(this).closest('tr');
                var taxvalue = $(".taxvalue", tr).asNumber();
                var amount = $(".amount", tr).asNumber();

                if (taxvalue > 0 & amount > 0)
                    value += taxvalue * amount / 100;
            });
        }

        if (value > 0) {
            if ($('#chkVAT').prop('checked')) //Inclusive
            {
                $('#spTotalTax').text('@Resources.Resource.Common_IncludesTax');
                }
                else {
                    $('#spTotalTax').text('@Resources.Resource.Common_TotalTax');
                }
            }
            else {
                $('#spTotalTax').text('@Resources.Resource.Common_Tax');
            }

            return value;
        }).formatCurrency();
}

function ChangeGood(element) {
    //
    debugger;
    var good = $(element).val();
    var tbody = $(element).closest('tr');
    var goodID = $("#ddlGoodID", tbody).val();
    if (goodID != "") {
        if (goodID > 0) {
            $.ajax({
                type: "POST",
                url: "/Services/GoodService.asmx/GetGoodByID",
                data: JSON.stringify({
                    goodID: goodID
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    try {
                        var good = JSON.parse(data.d);
                        $('.description', tbody).val(good.Decription);
                        $('.qty', tbody).val("1");
                        $('.unitprice', tbody).val(good.UnitPrice).formatCurrency();
                        $('.disc', tbody).val("");
                        $('.account', tbody).val(good.Accounts);
                        $('.taxrate', tbody).val(good.TaxRate);
                        CalAmount(element);
                        CalSubTotal();
                        CalTotal();

                    } catch (ex) { }
                }
            }).error(function (event, jqXHR, ajaxSettings, thrownError) {
                alert('Error when loading data');
            });
        }
        else if (goodID == 0) {
            alert("Add new inventory");
        }
    }
    else {
        $('.description', tbody).val("");
        $('.qty', tbody).val("");
        $('.unitprice', tbody).val("");
        $('.disc', tbody).val("");
        CalAmount(element);
        CalTax();
        CalSubTotal();
        CalTotal();
    }
}

function ChangeTax(element) {
    var tr = $(element).closest('tr');
    var taxID = $("#ddlTaxRateID", tr).val();
    if (taxID != "") {
        if (taxID > 0) {
            $.ajax({
                type: "POST",
                url: "/Services/GoodService.asmx/GetTaxByID",
                data: JSON.stringify({
                    taxID: taxID
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    try {
                        var tax = JSON.parse(data.d);
                        $('.taxvalue', tr).val(tax.Rate);
                        CalTax();
                        CalTotal();
                    } catch (ex) { }
                }
            }).error(function (event, jqXHR, ajaxSettings, thrownError) {
                alert('Error when loading data');
            });
        }
    }
    else {
        $('.taxvalue', tr).val("0");
        CalTax();
        CalTotal();
    }
}

function SaveSaleInvoice() {
    debugger;
    var isValid = $("#frmCreateRepeatingInvoice").valid();
    if (!isValid) {
        return false;
    }

    //For note function
    arrNoteID = [];
    $(".noteID").each(function () {
        if ($(this).val() != "")
            //  value += parseInt($(this).val());
            arrNoteID.push($(this).val());
    });

    if ($('#txtSupplier').val() == "") {
        alert("Input supplier, please");
        $('#txtSupplier').focus();
        return false;
    }

    var supplierName = $('#txtSupplier').val();
    var createDate = "12/18/2013";
    var dueDate = "12/18/2013";
    var invoiceNo = $('#hdfBillCode').val();
    var reference = $('#txtReference').val();
    //var stockID = 2;
    var currencyID = $('#CurrencyID').val();
    var vatID = $('#chkVAT').val() ? 1 : 0;
    var userID = $('#hdfUserID').val();
    var supplierID = 0;
    var subTotal = $('#txtSubTotal').asNumber();
    var totalTax = $('#txtTax').asNumber();
    var totalMoney = $('#txtInvoiceTotal').asNumber();
    var status = 4;
    var saleType = 0;

    var saleInvoiceDetail = BuildJSON();
    $.ajax({
        type: "POST",
        url: "/Services/SaleInvoiceService.asmx/SaveSaleInvoice",
        async: false,
        data: JSON.stringify({
            saleInvoiceID: null,
            supplierID: 0,
            supplierName: supplierName,
            createDate: createDate,
            dueDate: dueDate,
            invoiceNo: invoiceNo,
            reference: reference,
            currencyID: currencyID,
            vatID: vatID,
            userID: userID,
            subTotal: subTotal,
            totalTax: totalTax,
            totalMoney: totalMoney,
            status: status,
            saleType: saleType,
            saleInvoiceDetail: saleInvoiceDetail
        }),
        contentType: "application/json; charset=utf-8",
        traditional: true,
        dataType: "json",
        success: function (data) {
            debugger;
            var retValue = JSON.parse(data.d);

            if (retValue.indexOf("ERROR") != -1) {
                location.href = "/SaleInvoice/CreateRepeatingInvoice/";
            } else {
                $("#hidNoteType").val(2);
                $("#hidNoteFromID").val(retValue);
                AddNoteByNoteFromID(parseInt($("#hidNoteFromID").val()), parseInt($("#hidNoteType").val()));
                CreateRepeating(retValue);
                //Call function AddNote when create repeating ,
                //Note type : 2 : Repeating Sale
                var url = "/SaleInvoice/Repeating/";
                var msg = '@Resources.Resource.Common_Msg_CreateSuccess';
                CreatePopupMessage('divMessage', msg, '@Resources.Resource.Common_Message', 160, 400, url);
                return false;
            }

        }
    }).error(function (data) {
        alert('Error in save invoice\n' + data);
    });

}
function BuildJSON() {
    debugger;
    var arrayData = [];
    $("#tblSaleDetail tr").each(function () {
        var tr = $(this).closest('tr');
        var goodID = $("#ddlGoodID", tr).val();
        if (goodID != "-1" && parseInt(goodID) > 0) {
            var item = {
                "goodId": goodID,
                "quantity": $("#txtQty", tr).val(),
                "price": $("#txtUnitPrice", tr).val(),
                "taxRateID": $("#ddlTaxRateID", tr).val(),
                "accountID": $("#ddlAccountID", tr).val(),
                "discount": $("#txtDisc", tr).val(),
                "totalMoney": $("#txtAmount", tr).val(),
                "description": $("#txtDescription", tr).val(),
            };
            arrayData.push(item);
        }
    });
    return JSON.stringify(arrayData);
}
function CreateRepeating(id) {
    debugger;
    var numday = $('#txtDueDateDefault').val();
    var repeatTime = $('#ListDateSetting').val();
    var dateRun = $('#txtInvoiceDate').val();
    var duaDateNum = $('#txtDueDate').val();
    var duaDatetype = $('#ListDateSettingDuaDate').val();
    var endDate = $('#txtEndDate').val();
    var status = $("input:radio[id='rbGroup']:checked").val();
    var repeatType = 0;
    var saleInvoiceId = id;
    var purchaseId = 0;
    $.ajax(
        {
            type: 'POST',
            url: '/Repeating/Create/',
            data: {
                "numday": numday,
                "repeatTime": repeatTime,
                "dateRun": dateRun,
                "dueDateNum": duaDateNum,
                "dueDateType": duaDatetype,
                "endDate": endDate,
                "status": status,
                "repeatType": repeatType,
                "saleId": saleInvoiceId,
                "purchaseId": purchaseId
            },
            success: function (data) {

            }
        });
}

function AddNoteByNoteFromID(id, noteType) {
    debugger;
    var note = {
        noteFromID: id,
        noteType: noteType,
        arrNoteID: arrNoteID,
        change: "Created",
    }

    $.ajax({
        type: 'POST',
        url: '/Note/AddNoteByNoteFromID/',
        data: note,
        traditional: true,
        success: function () {
        }

    });
}

function CompareDate(date) {
    var strResult = "";
    $.ajax(
        {
            type: 'POST',
            url: '/Purchase/CompareDate/',
            async: false,
            data:
                {
                    "strDate": date
                },
            success: function (data) {
                strResult = data;
            }
        });
    return strResult;
}
</script>

<input type="hidden" id="hdfBillCode" value="@ViewBag.BillCode"/>

<input type="hidden" id="hidNoteType" value="@ViewBag.NoteType" />
<input type="hidden" id="hidNoteFromID" value="@ViewBag.NoteFromID" />
<input type="hidden" id="hdfUserID" value="@AppContext.RequestVariables.CurrentUser.ID"/>
<div id="breadcrumb">
    <div class="container">
        <div id="con_top">
            <div class="c_container">
                <h3>@Resources.Resource.SaleInvoice_Create_NewRepeatInvoice</h3>
                <div id="breadcrumbs">
                    <ul>
                        <li><span>@Resources.Resource.Common_Sales</span></li>
                        <li><a href="/SaleInvoice/Dashboard/">@Resources.Resource.Common_SaleOrder</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="cleardiv"></div>
<div class="error" style="display: none;">
    <img src="~/images/warning.gif" alt="Warning!" width="24" height="24" style="float: left; margin: -5px 10px 0px 0px;" />
    <span></span>.<br clear="all" />
</div>
<div id="divMessage" style="background: white;"></div>
<div class="cleardiv"></div>
<div class="container">
    <div class="c_container">
        <div class="form_position1">
            <table style="width: 100%;" id="BankAccount">
                <thead>
                    <tr>
                        <th>
                            @Resources.Resource.SaleInvoice_CreateRepeat_Repeat
                        </th>
                        <th>
                            @Resources.Resource.SaleInvoice_CreateRepeat_InvoiceDate
                        </th>
                        <th>
                            @Resources.Resource.Common_DueDate
                        </th>
                        <th>
                            @Resources.Resource.Common_Date
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <input type="text" id="txtDueDateDefault" value="@ViewBag.BillDefaultDuaDate" style="width: 10% !important; margin-right: 5px;"/>
                            @Html.DropDownList("ListDateSetting", (SelectList)ViewData["ListDateSetting"], new { style = "width:50% !important;" })
                        </td>
                        <td>
                            @*<input type="text" id="txtInvoiceDate" class="datepicker required" style="width: 55%;" />*@
                            @Html.TextBox("txtInvoiceDate", String.Empty, new { @class = "datepicker required", style = "width:55%;" })
                        </td>

                        <td>
                            <input type="text" id="txtDueDate" value="@ViewBag.SaleInvoiceDefaultDueDate" style="width: 10% !important; margin-right: 5px;"/>
                            @Html.DropDownList("ListDateSettingDuaDate", (SelectList)ViewData["ListDateSettingDuaDate"], new { style = "width:50% !important;" })</td>
                        <td>
                            @*<input type="text" id="txtEndDate" class="datepicker required" style="width: 55%" />*@
                            @Html.TextBox("txtEndDate", String.Empty, new { @class = "datepicker required", style = "width:55%;" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.RadioButton("rbGroup", "0", true)@Resources.Resource.SaleInvoice_CreateRepeat_Draft
                        </td>
                        <td>
                            @Html.RadioButton("rbGroup", "1", false)@Resources.Resource.SaleInvoice_CreateRepeat_Approved
                            @*@Html.RadioButton("rbGroup", "2", false)@Resources.Resource.SaleInvoice_CreateRepeat_ApprovedSent*@
                        </td>
                        <td></td>
                        <td></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmCreateRepeatingInvoice" }))
{
    <div id="con_form">
        <div class="container">
            <div class="c_container">
                <div class="cleardiv"></div>
                <div class="form_position1">
                    <div class="form_left">
                        <div class="form-group">
                            <label class="labelstock">@Resources.Resource.SaleInvoice_Create_To:</label>
                            @Html.TextBox("txtSupplier", String.Empty, new { @class = "form-control required" })
                            @Html.Hidden("ContactIDValue")
                        </div>
                        <div class="form-group">
                            <label class="labelstock">@Resources.Resource.SaleInvoice_Create_InvoiceNo:</label>

                            Automatically added when sale order is created
                        </div>
                        <div class="form-group">
                            <label class="labelstock">@Resources.Resource.SaleInvoice_Create_VAT:</label>
                            @Html.CheckBox("chkVAT", true)
                        </div>


                    </div>
                    <div class="form_right">
                        <div class="form-group">
                            <label class="labelstock">@Resources.Resource.SaleInvoice_Create_Reference</label>
                            @Html.TextBox("txtReference", String.Empty, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label class="labelstock">@Resources.Resource.SaleInvoice_Create_Currency:</label>
                            @Html.DropDownList("CurrencyID", new SelectList(ViewBag.CurrencyID, "Value", "Text", Resources.Resource.Common_SelectItem), "", new { @class = "form-control required" })
                        </div>

                    </div>
                </div>


            </div>
        </div>
    </div>

    <div id="con_body">
        <div class="container">
            <div class="c_container">
                <div id="form_body">


                    <table id="tblSaleDetail">
                        <thead>
                            <tr>
                                <th style="width: 140px;"><span>@Resources.Resource.Common_Item</span></th>
                                <th style="width: 170px;"><span>@Resources.Resource.Common_Description</span></th>
                                <th style="width: 80px;"><span>@Resources.Resource.Common_Quantity</span></th>
                                <th style="width: 90px;"><span>@Resources.Resource.SaleInvoice_Create_UnitPrice</span></th>
                                <th style="width: 80px;"><span>@Resources.Resource.SaleInvoice_Create_Disc</span></th>
                                <th style="width: 140px;"><span>@Resources.Resource.Common_Account</span></th>
                                <th style="width: 140px;"><span>@Resources.Resource.SaleInvoice_Create_TaxRate</span></th>
                                <th style="width: 100px;"><span>@Resources.Resource.Common_Amount</span></th>
                                <th style="width: 20px;"><span></span></th>
                            </tr>
                        </thead>
                        <tbody id="insertRow">
                            @for (int iIndex = 0; iIndex < 5; iIndex++)
                            {
                                <tr>
                                    <td>@Html.DropDownList("ddlGoodID", new SelectList(ViewBag.GoodID, "Value", "Text", ""), "", new { @class = "goodchange colCheckValid" })</td>
                                    <td>
                                        <input type="text" id="txtDescription" class="txt1 description" /></td>
                                    <td>
                                        <input type="text" id="txtQty" class="txt1 qty text-right checkvalid" /></td>
                                    <td>
                                        <input type="text" id="txtUnitPrice" class="txt1 unitprice numeric currency checkvalid" /></td>
                                    <td>
                                        <input type="text" id="txtDisc" class="txt1 disc numeric currency" /></td>
                                    <td>@Html.DropDownList("ddlAccountID", new SelectList(ViewBag.AccountID, "Value", "Text", ""), "", new { @class = "account checkvalid" })</td>
                                    <td>@Html.DropDownList("ddlTaxRateID", new SelectList(ViewBag.TaxRateID, "Value", "Text", ""), "", new { @class = "taxrate checkvalid" })
                                        <input type="hidden" value="0" class="taxvalue" />
                                    </td>
                                    <td>
                                        <input type="text" id="txtAmount" class="txt1 amount numeric currency" /></td>
                                    <td>
                                        <div class="remove" id="delRow" onclick="RemoveRow(this);"></div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="tablefooter">
                    <div class="pos1">
                        @*<button id="addline" class="addline">@Resources.Resource.Common_AddNewLine</button>*@
                        <input type="button" id="addline" class="addline" value="@Resources.Resource.Common_AddNewLine" />
                    </div>
                    <div class="pos2 posprice">
                        <p><span class="ta_label">@Resources.Resource.Common_SubTotal</span><span class="price subtotal" id="txtSubTotal">0.00</span></p>
                        <p><span class="ta_label" id="spTotalTax">@Resources.Resource.Common_Tax</span><span class="price vat" id="txtTax">0.00</span></p>
                    </div>
                    <div class="pos3 posprice">
                        <p><span class="ta_label">@Resources.Resource.Common_Total</span><span class="price total" id="txtInvoiceTotal">0.00</span></p>
                    </div>
                </div>


                <div class="cleardiv"></div>
                <input type="submit" value="Save" id="btnCreate" class="btn btn-defaultxero" />
                <input type="button" value="Cancel" id="form_cancel" class="btn btn-defaultxero" />
                <div class="cleardiv"></div>
            </div>
        </div>
    </div>
}

@Html.Partial("Note/_ViewNote")