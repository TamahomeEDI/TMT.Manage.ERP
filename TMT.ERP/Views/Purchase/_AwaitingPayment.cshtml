@model IEnumerable<TMT.ERP.DataAccess.Model.Purchase>
@{    
    var user = TMT.ERP.Commons.AppContext.RequestVariables.CurrentUser;
}
<div>
    <br />
    @Html.Partial("Purchase/_Search")
    <div class="buttontab">
        <a class="btn" href="javascript:void(0);" id="aPrint">Print</a>
        @if (user.UsersInRoles.ToList().Exists(x => x.Role.RolePermission.DoBatchPayment == true))
        {
            <a class="btn" href="javascript:void(0);" id="aBatchPay">Batch Payment</a>
        }
        <a class="btn" href="javascript:void(0);" id="aSchedulePay">Schedule Payment</a>
        <a class="btn" href="javascript:void(0);" id="aSearch">Search</a>
    </div>
    <br />
    <script>
        $("#aSearch").click(function () {
            $("#searchPurchase").show();
        });

        $('table#allpurchase > tbody > tr > td > a.awatigpayment').click(function () {
            
            var id = $(this).attr('title');
            window.location.href = encodeURI('/Purchase/AwaitingPaymentDetails?id=' + id);
        });

    </script>
    @if (Model.ToList().Count > 0)
    {
        <table id="allpurchase" class="table">
            <thead>
                <tr>
                    <th>@Resources.Resource.Purchase_List_Number
                    </th>
                    <th>
                        @Resources.Resource.Purchase_List_Reference
                    </th>
                    <th>
                        @Resources.Resource.Purchase_List_ContactName
                    </th>
                    <th>
                        @Resources.Resource.Purchase_List_Date
                    </th>
                    <th>
                        @Resources.Resource.Purchase_List_DueDate
                    </th>
                    <th>
                        @Resources.Resource.Purchase_List_TotalMoney
                    </th>
                    <th>
                        @Resources.Resource.Purchase_List_Status
                    </th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        @if (user.UsersInRoles.ToList().Exists(x => x.Role.RolePermission.RecordBillPayment == true))
                        {
                            <td>
                                <a href="javascript:void(0);" title="@item.ID" class="awatigpayment">@Html.DisplayFor(modelItem => item.Code)</a>
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.Code)
                            </td>
                        }
                        <td>
                            @Html.DisplayFor(modelItem => item.Reference)
                        </td>
                        <td>
                            <span class="email">@Html.DisplayFor(modelItem => item.Contact.ContactName)</span>
                        </td>
                        <td>
                            @item.CreatedDate.ToString("d")
                        </td>
                        <td>
                            @{
                        DateTime due = item.DueDate != null ? Convert.ToDateTime(item.DueDate) : DateTime.Now;
                            }
                            @due.ToString("d")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TotalMoney)
                            @Html.DisplayFor(modelItem => item.Currency.Code)
                        </td>
                        <td>
                            @{int? sStr = 0;
                              sStr = item.Status;
                              string result = "";
                              switch (sStr)
                              {
                                  case 0:
                                      result = Resources.Resource.SaleInvoice_Create_SaveAsDraft;
                                      break;
                                  case 1:
                                      result = Resources.Resource.SaleInvoice_List_Draft;
                                      break;
                                  case 2:
                                      result = Resources.Resource.SaleInvoice_List_AwaitingApproval;
                                      break;
                                  case 3:
                                      result = Resources.Resource.SaleInvoice_List_AwaitingPayment;
                                      break;
                                  case 4:
                                      result = Resources.Resource.SaleInvoice_List_Paid;
                                      break;
                                  case 5:
                                      result = Resources.Resource.SaleInvoice_List_Repeating;
                                      break;
                                  case -1:
                                      result = Resources.Resource.SaleInvoice_List_Delete;
                                      break;
                              }
                            }
                            @Html.Raw(result)        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="pager">
            <h4>Contains no records </h4>
        </div>
    }
</div>


