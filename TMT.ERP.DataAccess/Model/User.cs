//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMT.ERP.DataAccess.Model
{
    using System;
    using System.Collections.Generic;
    
    public partial class User : Entity
    {
        public User()
        {
            this.Notes = new HashSet<Note>();
            this.StockOutCards = new HashSet<StockOutCard>();
            this.StockOutCards1 = new HashSet<StockOutCard>();
            this.Purchases = new HashSet<Purchase>();
            this.Purchases1 = new HashSet<Purchase>();
            this.Purchases2 = new HashSet<Purchase>();
            this.Purchases3 = new HashSet<Purchase>();
            this.SaleInvoices = new HashSet<SaleInvoice>();
            this.SaleInvoices1 = new HashSet<SaleInvoice>();
            this.UsersInRoles = new HashSet<UsersInRole>();
            this.WorkOrders = new HashSet<WorkOrder>();
            this.WorkOrders1 = new HashSet<WorkOrder>();
            this.ExpenseClaims = new HashSet<ExpenseClaim>();
            this.ExpenseClaims1 = new HashSet<ExpenseClaim>();
            this.FixedAssets = new HashSet<FixedAsset>();
            this.PayRuns = new HashSet<PayRun>();
            this.PayRuns1 = new HashSet<PayRun>();
            this.Payments = new HashSet<Payment>();
            this.Payments1 = new HashSet<Payment>();
            this.Journals = new HashSet<Journal>();
            this.Journals1 = new HashSet<Journal>();
            this.StockInCards = new HashSet<StockInCard>();
            this.StockInCards1 = new HashSet<StockInCard>();
            this.StockInCards2 = new HashSet<StockInCard>();
            this.StockMovements = new HashSet<StockMovement>();
            this.StockMovements1 = new HashSet<StockMovement>();
        }
    
    	private int _id;
        public int ID { get { return _id; } set { SetNotifyingProperty(ref _id, value); } }
    	private string _username;
        public string UserName { get { return _username; } set { SetNotifyingProperty(ref _username, value); } }
    	private string _fullname;
        public string FullName { get { return _fullname; } set { SetNotifyingProperty(ref _fullname, value); } }
    	private string _password;
        public string Password { get { return _password; } set { SetNotifyingProperty(ref _password, value); } }
    	private string _email;
        public string Email { get { return _email; } set { SetNotifyingProperty(ref _email, value); } }
    	private string _phone;
        public string Phone { get { return _phone; } set { SetNotifyingProperty(ref _phone, value); } }
    	private string _avartar;
        public string Avartar { get { return _avartar; } set { SetNotifyingProperty(ref _avartar, value); } }
    	private Nullable<int> _groupid;
        public Nullable<int> GroupID { get { return _groupid; } set { SetNotifyingProperty(ref _groupid, value); } }
    	private Nullable<bool> _active;
        public Nullable<bool> Active { get { return _active; } set { SetNotifyingProperty(ref _active, value); } }
    	private Nullable<System.DateTime> _lastlogindate;
        public Nullable<System.DateTime> LastLoginDate { get { return _lastlogindate; } set { SetNotifyingProperty(ref _lastlogindate, value); } }
    	private Nullable<System.DateTime> _lastpasswordchangeddate;
        public Nullable<System.DateTime> LastPasswordChangedDate { get { return _lastpasswordchangeddate; } set { SetNotifyingProperty(ref _lastpasswordchangeddate, value); } }
    	private Nullable<System.DateTime> _createddate;
        public Nullable<System.DateTime> CreatedDate { get { return _createddate; } set { SetNotifyingProperty(ref _createddate, value); } }
    	private Nullable<int> _companyid;
        public Nullable<int> CompanyID { get { return _companyid; } set { SetNotifyingProperty(ref _companyid, value); } }
    
    	private ICollection<Note> _notes;
        public virtual ICollection<Note> Notes { get { return _notes; } set { SetNotifyingProperty(ref _notes, value); } }
    	private ICollection<StockOutCard> _stockoutcards;
        public virtual ICollection<StockOutCard> StockOutCards { get { return _stockoutcards; } set { SetNotifyingProperty(ref _stockoutcards, value); } }
    	private ICollection<StockOutCard> _stockoutcards1;
        public virtual ICollection<StockOutCard> StockOutCards1 { get { return _stockoutcards1; } set { SetNotifyingProperty(ref _stockoutcards1, value); } }
    	private ICollection<Purchase> _purchases;
        public virtual ICollection<Purchase> Purchases { get { return _purchases; } set { SetNotifyingProperty(ref _purchases, value); } }
    	private ICollection<Purchase> _purchases1;
        public virtual ICollection<Purchase> Purchases1 { get { return _purchases1; } set { SetNotifyingProperty(ref _purchases1, value); } }
    	private ICollection<Purchase> _purchases2;
        public virtual ICollection<Purchase> Purchases2 { get { return _purchases2; } set { SetNotifyingProperty(ref _purchases2, value); } }
    	private ICollection<Purchase> _purchases3;
        public virtual ICollection<Purchase> Purchases3 { get { return _purchases3; } set { SetNotifyingProperty(ref _purchases3, value); } }
    	private ICollection<SaleInvoice> _saleinvoices;
        public virtual ICollection<SaleInvoice> SaleInvoices { get { return _saleinvoices; } set { SetNotifyingProperty(ref _saleinvoices, value); } }
    	private ICollection<SaleInvoice> _saleinvoices1;
        public virtual ICollection<SaleInvoice> SaleInvoices1 { get { return _saleinvoices1; } set { SetNotifyingProperty(ref _saleinvoices1, value); } }
    	private ICollection<UsersInRole> _usersinroles;
        public virtual ICollection<UsersInRole> UsersInRoles { get { return _usersinroles; } set { SetNotifyingProperty(ref _usersinroles, value); } }
    	private ICollection<WorkOrder> _workorders;
        public virtual ICollection<WorkOrder> WorkOrders { get { return _workorders; } set { SetNotifyingProperty(ref _workorders, value); } }
    	private ICollection<WorkOrder> _workorders1;
        public virtual ICollection<WorkOrder> WorkOrders1 { get { return _workorders1; } set { SetNotifyingProperty(ref _workorders1, value); } }
    	private ICollection<ExpenseClaim> _expenseclaims;
        public virtual ICollection<ExpenseClaim> ExpenseClaims { get { return _expenseclaims; } set { SetNotifyingProperty(ref _expenseclaims, value); } }
    	private ICollection<ExpenseClaim> _expenseclaims1;
        public virtual ICollection<ExpenseClaim> ExpenseClaims1 { get { return _expenseclaims1; } set { SetNotifyingProperty(ref _expenseclaims1, value); } }
    	private ICollection<FixedAsset> _fixedassets;
        public virtual ICollection<FixedAsset> FixedAssets { get { return _fixedassets; } set { SetNotifyingProperty(ref _fixedassets, value); } }
    	private ICollection<PayRun> _payruns;
        public virtual ICollection<PayRun> PayRuns { get { return _payruns; } set { SetNotifyingProperty(ref _payruns, value); } }
    	private ICollection<PayRun> _payruns1;
        public virtual ICollection<PayRun> PayRuns1 { get { return _payruns1; } set { SetNotifyingProperty(ref _payruns1, value); } }
    	private ICollection<Payment> _payments;
        public virtual ICollection<Payment> Payments { get { return _payments; } set { SetNotifyingProperty(ref _payments, value); } }
    	private ICollection<Payment> _payments1;
        public virtual ICollection<Payment> Payments1 { get { return _payments1; } set { SetNotifyingProperty(ref _payments1, value); } }
    	private Company _company;
        public virtual Company Company { get { return _company; } set { SetNotifyingProperty(ref _company, value); } }
    	private ICollection<Journal> _journals;
        public virtual ICollection<Journal> Journals { get { return _journals; } set { SetNotifyingProperty(ref _journals, value); } }
    	private ICollection<Journal> _journals1;
        public virtual ICollection<Journal> Journals1 { get { return _journals1; } set { SetNotifyingProperty(ref _journals1, value); } }
    	private ICollection<StockInCard> _stockincards;
        public virtual ICollection<StockInCard> StockInCards { get { return _stockincards; } set { SetNotifyingProperty(ref _stockincards, value); } }
    	private ICollection<StockInCard> _stockincards1;
        public virtual ICollection<StockInCard> StockInCards1 { get { return _stockincards1; } set { SetNotifyingProperty(ref _stockincards1, value); } }
    	private ICollection<StockInCard> _stockincards2;
        public virtual ICollection<StockInCard> StockInCards2 { get { return _stockincards2; } set { SetNotifyingProperty(ref _stockincards2, value); } }
    	private ICollection<StockMovement> _stockmovements;
        public virtual ICollection<StockMovement> StockMovements { get { return _stockmovements; } set { SetNotifyingProperty(ref _stockmovements, value); } }
    	private ICollection<StockMovement> _stockmovements1;
        public virtual ICollection<StockMovement> StockMovements1 { get { return _stockmovements1; } set { SetNotifyingProperty(ref _stockmovements1, value); } }
    }
}
